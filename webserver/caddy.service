[Unit]
Description=Caddy HTTP/2 web server
Documentation=https://caddyserver.com/docs
After=network-online.target
Wants=network-online.target systemd-networkd-wait-online.service

; Do not allow the process to be restarted in a tight loop. If the
; process fails to start, something critical needs to be fixed.
StartLimitIntervalSec=86400
StartLimitBurst=10


[Service]
Restart=on-failure
RestartSec=1080

; User and group the process will run as.
User=www-data
Group=podman

; Commands to start/reload/stop the server and extend the stock configuration with available routes
ExecStart=/usr/local/bin/caddy run --config /etc/caddy/caddy_config.json
ExecStartPost=-/etc/caddy/buildroutes.sh
ExecStartPost=-/etc/caddy/postroutes.sh

ExecReload=/usr/local/bin/caddy reload --config /etc/caddy/caddy_config.json
ExecReload=-/etc/caddy/buildroutes.sh
ExecReload=-/etc/caddy/postroutes.sh

ExecStop=/usr/local/bin/caddy stop

; Limit the number of file descriptors; see `man systemd.exec` for more limit settings.
LimitNOFILE=1048576

; Use graceful shutdown with a reasonable timeout
KillMode=mixed
KillSignal=SIGQUIT
TimeoutStopSec=5s

; Use private /tmp and /var/tmp, which are discarded after caddy stops.
PrivateTmp=true
; Use a minimal /dev (May bring additional security if switched to 'true', but it may not work on Raspberry Pi's or other devices)
PrivateDevices=true
; Hide /home, /root, and /run/user. Nobody will steal your SSH-keys.
ProtectHome=false
; Make /usr, /boot, /etc and possibly some more folders read-only.
ProtectSystem=full

; The following additional security directives only work with systemd v229 or later.
; They further restrict privileges that can be gained by caddy.
; Note that you may have to add capabilities required by any plugins in use.
CapabilityBoundingSet=CAP_NET_BIND_SERVICE
AmbientCapabilities=CAP_NET_BIND_SERVICE
NoNewPrivileges=true

[Install]
WantedBy=multi-user.target
